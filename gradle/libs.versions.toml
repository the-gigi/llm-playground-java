[versions]
guava = "33.0.0-jre"
jackson = "2.15.2"
junit = "5.9.1"
kotlinx = "1.6.2"
ktor = "2.3.7"
langchain4j = "0.25.0"
logback = "1.4.14"
okhttp = "4.10.0"
openai-java = "0.14.0"
retrofit = "2.9.0"
simple-openai = "1.4.0"
openai-kotlin = "3.6.3"
slf4j = "2.0.11"

[libraries]
guava = { module = "com.google.guava:guava", version.ref = "guava" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
langchain4j = { module = "dev.langchain4j:langchain4j", version.ref = "langchain4j" }
langchain4j-open-ai = { module = "dev.langchain4j:langchain4j-open-ai", version.ref = "langchain4j" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
openai-java-api = { module = "com.theokanning.openai-gpt3-java:api", version.ref = "openai-java" }
openai-java-client = { module = "com.theokanning.openai-gpt3-java:client", version.ref = "openai-java" }
openai-java-service = { module = "com.theokanning.openai-gpt3-java:service", version.ref = "openai-java" }
openai-kotlin-client = { module = "com.aallam.openai:openai-client", version.ref = "openai-kotlin" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }
simple-openai = { module = "io.github.sashirestela:simple-openai", version.ref = "simple-openai" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
junit-jupyter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }

